<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pl.sodexo.it.gryf.dao.api.search.mapper.ProductInstanceSearchMapper">

    <select id="countAvailableToNumberGeneration" resultType="Long">
        SELECT COUNT(*)
        FROM APP_PBE.PBE_PRODUCT_INSTANCES pri
        JOIN APP_PBE.PBE_PRODUCTS prd ON prd.PRD_ID = pri.PRD_ID
        WHERE
            <include refid="numberToGeneratePredicates"/>
    </select>

    <sql id="getToGenerateNumberQuery"  >
        SELECT
            pri.PRD_ID      productId,
            prd.PRT_TYPE    typeNumber,
            prd.VALUE       faceValue,
           <!--TODO skad data waznosci?-->
            sysdate         validDate,
            pri.PRI_NUMBER  productInstanceNumber
        FROM APP_PBE.PBE_PRODUCT_INSTANCES pri
          JOIN APP_PBE.PBE_PRODUCTS prd ON prd.PRD_ID = pri.PRD_ID
        WHERE
        <include refid="numberToGeneratePredicates"/>
        ORDER BY pri.PRI_NUMBER
    </sql>

    <sql id="numberToGeneratePredicates">
        pri.PRD_ID = #{productId}
        AND pri.PRINT_NUMBER IS NULL
        AND prd.value IS NOT NULL
        AND (prd.EXPIRY_DATE IS NULL OR prd.EXPIRY_DATE > sysdate)
    </sql>

    <select id="getToGenerateNumber" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.products.PrintNumberDto" parameterType="list">
        <!-- Tu nie ma całkowitego pageowania (z pageoffset), bo przy zaciąganiu i updateowaniu paczkami,
         warunki zaciągania danych (pusty numer drukowany) powoduja,
         że przy tradycyjnym podejściu gubimy co drugą stronę -->
        SELECT * FROM (
            <include refid="getToGenerateNumberQuery"/>
        ) WHERE rownum &lt;= #{_pagesize}
    </select>

    <update id ="updatePrintNumber" parameterType="pl.sodexo.it.gryf.common.dto.publicbenefits.products.PrintNumberDto">
        UPDATE APP_PBE.PBE_PRODUCT_INSTANCES pri
        SET
            pri.PRINT_NUMBER = #{generatedPrintNumber},
            pri.CRC = #{generatedChecksum}
        WHERE
          pri.PRD_ID = #{productId} AND pri.PRI_NUMBER = #{productInstanceNumber}
    </update>

</mapper>