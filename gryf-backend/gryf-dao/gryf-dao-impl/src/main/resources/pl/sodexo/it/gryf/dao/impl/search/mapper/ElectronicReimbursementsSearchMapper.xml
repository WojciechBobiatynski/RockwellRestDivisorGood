<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pl.sodexo.it.gryf.dao.api.search.mapper.ElectronicReimbursementsSearchMapper">

    <select id="findEcltRmbsListByCriteria" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ElctRmbsDto" parameterType="list">
        SELECT * FROM
        (
          SELECT * FROM
            (
                SELECT
                    ermbs.ID                    rmbsNumber,
                    ti_in.ID                    trainingInstanceId,
                    ti.NAME                     trainingName,
                    ti.EXTERNAL_ID              trainingExternalId,
                    ind.PESEL                   pesel,
                    ind.FIRST_NAME              participantName,
                    ind.LAST_NAME               participantSurname,
                    ermbs.REIMBURSEMENT_DATE    rmbsDate,
                    status.NAME                 rmbsStatus,
                    status.ID                   rmbsStatusId,
                    tp.NAME                     rmbsType,
                    tp.CODE                     rmbsTypeCode,
                    ti.TRAINING_INSTITUTION_ID  trainingInstitutionId,
                    inv.INVOICE_NUMBER          noteNumber
                FROM
                    APP_PBE.E_REIMBURSEMENTS ermbs
                    LEFT JOIN APP_PBE.TI_TRAINING_INSTANCES ti_in ON ti_in.ID = ermbs.TI_TR_INST_ID
                    LEFT JOIN APP_PBE.TI_TRAININGS ti ON ti.ID = ti_in.TRAINING_ID
                    LEFT JOIN APP_PBE.INDIVIDUALS ind ON ind.ID = ti_in.INDIVIDUAL_ID
                    LEFT JOIN APP_PBE.E_REIMBURSEMENT_STATUSES status ON status.ID = ermbs.STATUS_ID
                    LEFT JOIN APP_PBE.E_REIMBURSEMENT_TYPES tp ON tp.CODE = ermbs.TYPE_ID
                    LEFT JOIN APP_PBE.E_REIMBURSEMENT_INVOICES inv on (inv.E_REIMBURSEMENT_ID = ermbs.ID AND inv.INVOICE_TYPE = 'NUPB')
                WHERE
                    ermbs.TYPE_ID = 'TI_INST'
                UNION
                SELECT
                    ermbs.ID                  rmbsNumber,
                    null                      trainingInstanceId,
                    null                      trainingName,
                    null                      trainingExternalId,
                    ind.PESEL                 pesel,
                    ind.FIRST_NAME            participantName,
                    ind.LAST_NAME             participantSurname,
                    ermbs.REIMBURSEMENT_DATE  rmbsDate,
                    status.NAME               rmbsStatus,
                    status.ID                 rmbsStatusId,
                    tp.NAME                   rmbsType,
                    tp.CODE                   rmbsTypeCode,
                    null                      trainingInstitutionId,
                    inv.INVOICE_NUMBER        noteNumber
                FROM
                    APP_PBE.E_REIMBURSEMENTS ermbs
                    LEFT JOIN APP_PBE.E_REIMBURSEMENT_STATUSES status ON status.ID = ermbs.STATUS_ID
                    LEFT JOIN APP_PBE.E_REIMBURSEMENT_TYPES tp ON tp.CODE = ermbs.TYPE_ID
                    LEFT JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOLS pip on ermbs.PRODUCT_INSTANCE_POOL_ID = pip.ID
                    LEFT JOIN APP_PBE.ORDERS ord on pip.ORDER_ID = ord.ID
                    LEFT JOIN APP_PBE.CONTRACTS cnt on ord.CONTRACT_ID = cnt.ID
                    LEFT JOIN APP_PBE.INDIVIDUALS ind on ind.ID = cnt.INDIVIDUAL_ID
                    LEFT JOIN APP_PBE.E_REIMBURSEMENT_INVOICES inv on (inv.E_REIMBURSEMENT_ID = ermbs.ID AND inv.INVOICE_TYPE = 'NUPB')
                WHERE
                    ermbs.TYPE_ID in ('URSVD_POOL', 'RET_POOL')
            )
        <where>
            <if test="criteria.rmbsNumber != null and criteria.rmbsNumber != ''">
                rmbsNumber = #{criteria.rmbsNumber}
            </if>
            <if test="criteria.trainingName != null and criteria.trainingName != ''">
                AND LOWER(trainingName) like '%' || LOWER(#{criteria.trainingName}) || '%'
            </if>
            <if test="criteria.trainingExternalId != null and criteria.trainingExternalId != ''">
                AND LOWER(trainingExternalId) like '%' || LOWER(#{criteria.trainingExternalId}) || '%'
            </if>
            <if test="criteria.pesel != null and criteria.pesel != ''">
                AND pesel like '%' || #{criteria.pesel} || '%'
            </if>
            <if test="criteria.participantName != null and criteria.participantName != ''">
                AND LOWER(participantName) like '%' || LOWER(#{criteria.participantName}) || '%'
            </if>
            <if test="criteria.participantSurname != null and criteria.participantSurname != ''">
                AND LOWER(participantSurname) like '%' || LOWER(#{criteria.participantSurname}) || '%'
            </if>
            <if test="criteria.rmbsDateFrom != null">
                AND TRIM(rmbsDate) &gt;= TRIM(#{criteria.rmbsDateFrom})
            </if>
            <if test="criteria.rmbsDateTo != null">
                AND TRIM(rmbsDate) &lt;= TRIM(#{criteria.rmbsDateTo})
            </if>
            <if test="criteria.rmbsStatus != null and criteria.rmbsStatus != ''">
                AND rmbsStatus = #{criteria.rmbsStatus}
            </if>
            <if test="criteria.rmbsType != null and criteria.rmbsType != ''">
                AND rmbsType = #{criteria.rmbsType}
            </if>
            <if test="criteria.noteNumber != null and criteria.noteNumber != ''">
                AND LOWER(noteNumber) like '%' || LOWER(#{criteria.noteNumber}) || '%'
            </if>
            <if test="criteria.gryfUser.userType == 'TRAINING_INSTITUTION'">
                AND trainingInstitutionId = #{criteria.gryfUser.trainingInstitutionId}
            </if>
        </where>
        <if test="criteria.sortColumns != null">
            <foreach item="columnName" index="index" collection="criteria.sortColumns" open="ORDER BY " separator="," close="">
                ${columnName} ${criteria.sortTypes[index]}
            </foreach>
        </if>
        )
        <where>
            <if test="criteria.limit != null">
                ROWNUM &lt;= #{criteria.limit} + 1
            </if>
        </where>
    </select>

    <select id="findElctRmbsStatuses" resultType="pl.sodexo.it.gryf.common.dto.api.SimpleDictionaryDto" parameterType="list">
        SELECT
            dic.ID          id,
            dic.NAME        name,
            dic.ORDINAL     ordinal
        FROM
            APP_PBE.E_REIMBURSEMENT_STATUSES dic
        ORDER BY
            dic.ordinal
    </select>

    <select id="findElctRmbsTypes" resultType="pl.sodexo.it.gryf.common.dto.api.SimpleDictionaryDto" parameterType="list">
        SELECT
            dic.code        id,
            dic.NAME        name,
            dic.ORDINAL     ordinal
        FROM
            APP_PBE.E_REIMBURSEMENT_TYPES dic
        ORDER BY
            dic.ordinal
    </select>

    <select id="findCalculationChargesParamsForTrInstId" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.CalculationChargesParamsDto">
        SELECT
          tr.HOUR_PRICE                                 trainingHourPrice,
          tr_cat_par.PRODUCT_INSTANCE_FOR_HOUR          productInstanceForHour,
          tr_cat_par.MAX_PRODUCT_INSTANCE               maxProductInstance,
          tr_in.ASSIGNED_NUM                            usedProductsNumber,
          prd.VALUE                                     productValue,
          tr.HOURS_NUMBER                               trainingHoursNumber,
          tr.PRICE                                      trainingPrice,
          gr_param.VALUE/100                            ownContributionPercentage,
          (100-gr_param.VALUE)/100                      indSubsidyPercentage
        FROM
          APP_PBE.TI_TRAINING_INSTANCES tr_in
          JOIN APP_PBE.TI_TRAININGS tr ON tr.ID = tr_in.TRAINING_ID
          JOIN APP_PBE.TI_TRAINING_CATEGORIES tr_cat ON tr_cat.ID = tr.TRAINING_CATEGORY_ID
          JOIN APP_PBE.GRANT_PROGRAMS gr_pr ON gr_pr.ID = tr_in.GRANT_PROGRAM_ID
          JOIN APP_PBE.TI_TRAINING_CATEGORY_PARAMS tr_cat_par ON (tr_cat.ID = tr_cat_par.CATEGORY_ID AND gr_pr.ID = tr_cat_par.GRANT_PROGRAM_ID)
          JOIN APP_PBE.GRANT_OWNERS gr_own ON gr_own.ID = gr_pr.GRANT_OWNER_ID
          JOIN APP_PBE.PBE_PRODUCTS prd ON prd.GRANT_OWNER_ID = gr_own.ID
          JOIN APP_PBE.GRANT_PROGRAM_PARAMS gr_param on (gr_param.GRANT_PROGRAM_ID = gr_pr.ID AND gr_param.PARAM_ID = 'OWN_CONT_P')
        WHERE
          tr_in.ID = #{trainingInstanceId}
          AND NVL(tr_cat_par.DATE_FROM, SYSDATE) &lt;= SYSDATE
          AND NVL(tr_cat_par.DATE_TO, SYSDATE) &gt;= SYSDATE
          <if test="criteria.gryfUser.userType == 'TRAINING_INSTITUTION'">
                AND tr.TRAINING_INSTITUTION_ID = #{criteria.gryfUser.trainingInstitutionId}
          </if>
    </select>

    <sql id="baseForReimbursement">
        SELECT
--        rozliczenie
          ermbs.ID                                  ermbsId,
          ermbs.TYPE_ID                             typeCode,
          ermbs.TI_TR_INST_ID                       trainingInstanceId,
          ermbs.PRODUCT_INSTANCE_POOL_ID            poolId,
          ermbs.STATUS_ID                           statusCode,
          ermbs_stat.NAME                           statusName,
          ermbs.REIMBURSEMENT_DATE                  reimbursementDate,
          ermbs.ARRIVAL_DATE                        arrivalDate,
          tr_in.GRANT_PROGRAM_ID                    grantProgramId,
          CASE tr_in.OPINION_DONE
            WHEN 'Y'
              THEN 1
            ELSE 0
          END                                       opinionDone,
          tr.TRAINING_INSTITUTION_ID                trainingInstitutionId,
          ermbs.SXO_TI_AMOUNT_DUE_TOTAL             sxoTiAmountDueTotal,
          ermbs.SXO_IND_AMOUNT_DUE_TOTAL            sxoIndAmountDueTotal,
          ermbs.IND_TI_AMOUNT_DUE_TOTAL             indTiAmountDueTotal,
          ermbs.TI_REIMB_ACCOUNT_NUMBER             tiReimbAccountNumber,
          ermbs.IND_OWN_CONTRIBUTION_USED           indOwnContributionUsed,
          ermbs.IND_SUBSIDY_VALUE                   indSubsidyValue,
          CASE
            WHEN
              NVL(ermbs.ARRIVAL_DATE, SYSDATE) - NVL(e_day_limit_param.VALUE, #{criteria.config.defaultEReimburseDayLimit}) &gt; tr.END_DATE
                THEN 1
            ELSE
              0
          END                                       terminated,
          ermbs.REJECTION_REASON_ID                 rejectionReasonId,
          ermbs.REJECTION_DETAILS                   rejectionDetails,
          CASE
                WHEN
                  auto_param.VALUE = 'Y'
                    THEN 1
                ELSE
                  0
          END                                       automatic,
          ermbs.VERSION                             version,
--        raporty
          report.ID                                 rep_id,
          report.E_REIMBURSEMENT_ID                 rep_ermbsId,
          report.TYPE_NAME                          rep_typeName,
          report.FILE_LOCATION                      rep_fileLocation,
--        maile
          mails.ID                                  mail_id,
          mails.EMAIL_TYPE                          mail_emailType,
          mails.EMAILS_TO                           mail_emailsTo,
          mails.EMAIL_SUBJECT                       mail_emailSubject,
          mails.EMAIL_BODY                          mail_emailBody,
--        załączniki maili
          e_att.ID                                  mail_ett_id,
          e_att.ATTACHMENT_PATH                     mail_ett_fileLocation,
          e_att.ATTACHMENT_NAME                     mail_ett_name,
          e_att.ATTACHMENT_NAME                     mail_ett_originalFilename,
--        korekta
          last_corr.ID                              corr_id,
          last_corr.E_RMBS_ID                       corr_ermbsId,
          last_corr.REASON                          corr_correctionReason,
          last_corr.CORR_NUMBER                     corr_correctionNumber,
          last_corr.COMPLEMENT_DATE                 corr_complementDate,
          last_corr.REQUIRED_DATE                   corr_requiredDate,
          last_corr.VERSION                         corr_version,
          last_corr.CREATED_USER                    corr_createdUser,
          last_corr.CREATED_TIMESTAMP               corr_createdTimestamp,
          last_corr.MODIFIED_USER                   corr_modifiedUser,
          last_corr.MODIFIED_TIMESTAMP              corr_modifiedTimestamp,
--        załączniki do korekty
          cor_att.ID                                corr_ctt_id,
          cor_att.CORR_ID                           corr_ctt_corrId,
          cor_att.E_RMBS_ATT_ID                     corr_ctt_ermbsAttId,
          cor_att.FILE_ID                           corr_ctt_fileId,
          cor_att.OLD_DOCUMENT_NUMBER               corr_ctt_oldDocumentNumber,
          cor_att.OLD_DOCUMENT_DATE                 corr_ctt_oldDocumentDate,
          cor_att.OLD_ADDITIONAL_DESC               corr_ctt_oldAdditionalDesc,
          ctt_t.NAME                                corr_ctt_attTypeName,
          rmbs_att.STATUS                           corr_ctt_status,
          c_file.ORIGINAL_FILE_NAME                 corr_ctt_originalFileName,
--        produkty
          pool.ORDER_ID                             prd_orderId,
          pool_uses.ASSIGNED_NUM                    prd_reservedProductsCount,
          pool.EXPIRY_DATE                          prd_expirationDate,
--        załączniki
          att.ID                                    att_id,
          att.E_RMBS_ID                             att_ermbsId,
          att.attach_type                           att_code,
          files.ID                                  att_fileId,
          att.DOCUMENT_NUMBER                       att_documentNumber,
          att.DOCUMENT_DATE                         att_documentDate,
          att.ADDITIONAL_DESCRIPTION                att_additionalDescription,
          att.STATUS                                att_status,
          files.ORIGINAL_FILE_NAME                  att_originalFileName,
          att_t.MAX_BYTES_PER_FILE                  att_maxFileSize,
          att.VERSION                               att_version,
          CASE
              WHEN att_req.ATTACH_TYPE is not NULL
                THEN 1
              ELSE
                0
            END                                     att_required
        FROM
          APP_PBE.E_REIMBURSEMENTS ermbs
          JOIN APP_PBE.E_REIMBURSEMENT_STATUSES ermbs_stat ON ermbs.STATUS_ID = ermbs_stat.ID
          JOIN APP_PBE.TI_TRAINING_INSTANCES tr_in ON tr_in.ID = ermbs.TI_TR_INST_ID
          JOIN APP_PBE.TI_TRAININGS tr ON tr.ID = tr_in.TRAINING_ID
          LEFT JOIN APP_PBE.GRANT_PROGRAM_PARAMS e_day_limit_param on (
            e_day_limit_param.GRANT_PROGRAM_ID = tr_in.GRANT_PROGRAM_ID
            AND e_day_limit_param.PARAM_ID = 'E_DAY_LIM'
            AND NVL(e_day_limit_param.DATE_FROM, SYSDATE) &lt;= SYSDATE
            AND NVL(e_day_limit_param.DATE_TO, SYSDATE) &gt;= SYSDATE
          )
          LEFT JOIN APP_PBE.GRANT_PROGRAM_PARAMS auto_param on (
            auto_param.GRANT_PROGRAM_ID = tr_in.GRANT_PROGRAM_ID
            AND auto_param.PARAM_ID = 'AUTO_REIMB'
            AND NVL(auto_param.DATE_FROM, SYSDATE) &lt;= SYSDATE
            AND NVL(auto_param.DATE_TO, SYSDATE) &gt;= SYSDATE
          )

          LEFT JOIN APP_PBE.E_REIMBURSEMENT_REPORTS report ON report.E_REIMBURSEMENT_ID = ermbs.ID

          LEFT JOIN APP_PBE.E_REIMBURSEMENT_EMAILS mails ON mails.E_REIMBURSEMENT_ID = ermbs.ID
          LEFT JOIN APP_PBE.EMAIL_INSTANCE_ATTACHMENTS e_att ON e_att.EMAIL_INSTANCE_ID = mails.EMAIL_INSTANCE_ID

          LEFT JOIN <include refid="lastCorrection"/> last_corr ON last_corr.e_rmbs_id = ermbs.ID
          LEFT JOIN APP_PBE.CORRECTION_ATTACHMENTS cor_att on last_corr.ID = cor_att.CORR_ID
          LEFT JOIN APP_PBE.E_RMBS_ATTACHMENTS rmbs_att ON rmbs_att.ID = cor_att.E_RMBS_ATT_ID
          LEFT JOIN APP_PBE.ATTACHMENT_TYPES ctt_t ON ctt_t.CODE = rmbs_att.ATTACH_TYPE
          LEFT JOIN APP_PBE.ATTACHMENT_FILES c_file ON c_file.ID = cor_att.FILE_ID

          LEFT JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOL_USES pool_uses ON pool_uses.TRAINING_INSTANCE_ID = tr_in.ID
          LEFT JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOLS pool on pool_uses.PRODUCT_INSTANCE_POOL_ID = pool.ID

          LEFT JOIN APP_PBE.E_RMBS_ATTACHMENTS att ON (att.E_RMBS_ID = ermbs.ID AND att.STATUS != 'DELETED')
          LEFT JOIN APP_PBE.ATTACHMENT_FILES files ON files.ID = att.FILE_ID
          LEFT JOIN APP_PBE.ATTACHMENT_TYPES att_t ON att_t.CODE = att.ATTACH_TYPE
          LEFT JOIN APP_PBE.GRANT_PROGRAM_ATTACH_REQ att_req ON (
              att_req.ATTACH_TYPE = att_t.code
              AND att_req.GRANT_PROGRAM_ID = tr_in.GRANT_PROGRAM_ID
              AND att_req.DATE_FROM &lt;= SYSDATE
              AND NVL(att_req.DATE_TO, SYSDATE) &gt;= SYSDATE
            )
    </sql>

    <resultMap id="ecltRmbsHeadMap" type="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ElctRmbsHeadDto" autoMapping="true" >
        <id column="ermbsId" property="ermbsId"/>
        <association property="lastCorrectionDto" columnPrefix="corr_" autoMapping="true" javaType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.CorrectionDto">
            <id column="id" property="id"/>
            <collection property="attachments" ofType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.CorrectionAttachmentDto" autoMapping="true" columnPrefix="ctt_"/>
        </association>
        <collection property="products" ofType="pl.sodexo.it.gryf.common.dto.publicbenefits.individuals.ind.ProductHeadDto" autoMapping="true" columnPrefix="prd_"/>
        <collection property="attachments" ofType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsAttachmentDto" autoMapping="true" columnPrefix="att_"/>
        <collection property="reports" ofType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsReportDto" autoMapping="true" columnPrefix="rep_"/>
        <collection property="emails" ofType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsMailDto" autoMapping="true" columnPrefix="mail_">
            <id column="id" property="id"/>
            <collection property="attachments" ofType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsMailAttachmentDto" autoMapping="true" columnPrefix="ett_"/>
        </collection>
    </resultMap>
    <select id="findEcltRmbsById" resultMap="ecltRmbsHeadMap">
        <include refid="baseForReimbursement"/>
        WHERE
          ermbs.ID = #{ermbsId}
        <if test="criteria.gryfUser.userType == 'TRAINING_INSTITUTION'">
          AND tr.TRAINING_INSTITUTION_ID = #{criteria.gryfUser.trainingInstitutionId}
        </if>
    </select>

    <select id="findEcltRmbsByTrainingInstanceId" resultMap="ecltRmbsHeadMap">
        <include refid="baseForReimbursement"/>
        WHERE
        tr_in.ID = #{trainingInstanceId}
        AND ermbs.STATUS_ID != 'CNCL'
        <if test="criteria.gryfUser.userType == 'TRAINING_INSTITUTION'">
            AND tr.TRAINING_INSTITUTION_ID = #{criteria.gryfUser.trainingInstitutionId}
        </if>
    </select>

    <sql id="lastCorrection">
        (SELECT * FROM
            (SELECT
                correct.*,
                RANK() OVER(PARTITION BY correct.e_rmbs_id ORDER BY correct.CREATED_TIMESTAMP ASC) corr_number,
                RANK() OVER(PARTITION BY correct.e_rmbs_id ORDER BY correct.CREATED_TIMESTAMP DESC) corr_order
            FROM APP_PBE.CORRECTIONS correct)
        WHERE corr_order = 1)
    </sql>

    <select id="findGrantProgramParams" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsGrantProgramParamsDto">
        select
            ermbs.ID                                                                                     ereimbursmentId,
            NVL(gr_pr_trains.ID, gr_pr_pool.ID)                                                          grantProgramID,
            NVL(gr_pr_trains.PROGRAM_NAME, gr_pr_pool.PROGRAM_NAME)                                      grantProgramName,
            NVL(gr_trains_ow.EMAIL_ADDRESSES_GRANT_APP_INFO, gr_pool_ow.EMAIL_ADDRESSES_GRANT_APP_INFO)  grantProgramEmailCC,
            NVL(gr_trains_email_from.VALUE, gr_pool_email_from.VALUE)                                    grantProgramEmailFrom,
            NVL(gr_trains_email_replay.VALUE, gr_pool_email_from.VALUE)                                  grantProgramEmailReplay
        from
        APP_PBE.E_REIMBURSEMENTS ermbs
        LEFT JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOLS pip on ermbs.PRODUCT_INSTANCE_POOL_ID = pip.ID
        LEFT JOIN APP_PBE.ORDERS ord on pip.ORDER_ID = ord.ID
        LEFT JOIN APP_PBE.GRANT_PROGRAMS gr_pr_pool ON gr_pr_pool.ID = ord.GRANT_PROGRAM_ID
        LEFT JOIN APP_PBE.GRANT_OWNERS gr_pool_ow ON gr_pool_ow.ID = gr_pr_pool.GRANT_OWNER_ID
        LEFT JOIN APP_PBE.GRANT_PROGRAM_PARAMS gr_pool_email_from ON gr_pool_email_from.GRANT_PROGRAM_ID = gr_pr_pool.ID AND gr_pool_email_from.PARAM_ID = 'EMAIL_FROM' and
                                                                        (gr_pool_email_from.DATE_FROM IS NULL or gr_pool_email_from.DATE_FROM &lt;= SYSDATE) and
                                                                        (gr_pool_email_from.DATE_TO IS NULL or  SYSDATE &lt;= gr_pool_email_from.DATE_TO)
        LEFT JOIN APP_PBE.GRANT_PROGRAM_PARAMS gr_pool_email_replay ON gr_pool_email_replay.GRANT_PROGRAM_ID = gr_pr_pool.ID AND gr_pool_email_replay.PARAM_ID = 'EMAIL_RT'  and
                                                                        (gr_pool_email_replay.DATE_FROM IS NULL or gr_pool_email_replay.DATE_FROM &lt;= SYSDATE) and
                                                                        (gr_pool_email_replay.DATE_TO IS NULL or  SYSDATE &lt;= gr_pool_email_replay.DATE_TO)

        LEFT JOIN APP_PBE.TI_TRAINING_INSTANCES tr_in ON tr_in.ID = ermbs.TI_TR_INST_ID
        LEFT JOIN APP_PBE.GRANT_PROGRAMS gr_pr_trains ON gr_pr_trains.ID = tr_in.GRANT_PROGRAM_ID
        LEFT JOIN APP_PBE.GRANT_OWNERS gr_trains_ow ON gr_trains_ow.ID = gr_pr_trains.GRANT_OWNER_ID
        LEFT JOIN APP_PBE.GRANT_PROGRAM_PARAMS gr_trains_email_from ON gr_trains_email_from.GRANT_PROGRAM_ID = gr_pr_trains.ID AND gr_trains_email_from.PARAM_ID = 'EMAIL_FROM' and
                                                                        (gr_trains_email_from.DATE_FROM IS NULL or gr_trains_email_from.DATE_FROM &lt;= SYSDATE) and
                                                                        (gr_trains_email_from.DATE_TO IS NULL or  SYSDATE &lt;= gr_trains_email_from.DATE_TO)
        LEFT JOIN APP_PBE.GRANT_PROGRAM_PARAMS gr_trains_email_replay ON gr_trains_email_replay.GRANT_PROGRAM_ID = gr_pr_trains.ID AND gr_trains_email_replay.PARAM_ID = 'EMAIL_RT'  and
                                                                        (gr_trains_email_replay.DATE_FROM IS NULL or gr_trains_email_replay.DATE_FROM &lt;= SYSDATE) and
                                                                        (gr_trains_email_replay.DATE_TO IS NULL or  SYSDATE &lt;= gr_trains_email_replay.DATE_TO)
        where ermbs.id = #{ermbsId}


    </select>

    <select id="findMailParams" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsMailParamsDto">
        SELECT
          gr_pr.PROGRAM_NAME         grantProgramName,
          ind.FIRST_NAME             firstName,
          ind.LAST_NAME              lastName,
          tr.NAME                    trainingName,
          contact.CONTACT_DATA       email,
          invoice.INVOICE_NUMBER     noteNo,
          CASE
            WHEN cnt.CONTRACT_TYPE_ID = 'IND'
              THEN 0
            ELSE
              1
          END                        contractForEnterprise
        FROM
          APP_PBE.E_REIMBURSEMENTS ermbs
          JOIN APP_PBE.TI_TRAINING_INSTANCES ti ON ti.ID = ermbs.TI_TR_INST_ID
          JOIN APP_PBE.TI_TRAININGS tr ON tr.ID = ti.TRAINING_ID
          JOIN APP_PBE.TRAINING_INSTITUTIONS tinst ON tinst.ID = tr.TRAINING_INSTITUTION_ID
          JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOL_USES pipu on ti.ID = pipu.TRAINING_INSTANCE_ID
          JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOLS pip on pipu.PRODUCT_INSTANCE_POOL_ID = pip.ID
          JOIN APP_PBE.ORDERS ord on pip.ORDER_ID = ord.ID
          JOIN APP_PBE.CONTRACTS cnt on ord.CONTRACT_ID = cnt.ID
          JOIN APP_PBE.INDIVIDUALS ind on ind.ID = cnt.INDIVIDUAL_ID
          JOIN APP_PBE.GRANT_PROGRAMS gr_pr ON gr_pr.ID = ti.GRANT_PROGRAM_ID
          JOIN APP_PBE.INDIVIDUAL_CONTACTS contact ON contact.IND_ID = ind.ID
          LEFT JOIN APP_PBE.E_REIMBURSEMENT_INVOICES invoice ON invoice.E_REIMBURSEMENT_ID = ermbs.ID
        WHERE
          ermbs.ID = #{ermbsId}
          AND contact.CONTACT_TYPE = 'VER_EMAIL'
          AND rownum &lt;= 1
    </select>

    <select id="findMailParamsForUnreservedPool" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsMailParamsDto">
        SELECT
          gr_pr.PROGRAM_NAME         grantProgramName,
          ind.FIRST_NAME             firstName,
          ind.LAST_NAME              lastName,
          contact.CONTACT_DATA       email,
          invoice.INVOICE_NUMBER     noteNo,
          CASE
            WHEN cnt.CONTRACT_TYPE_ID = 'IND'
              THEN 0
            ELSE
              1
          END                        contractForEnterprise,
          ermbs.TYPE_ID              ermbsTypeId
        FROM
          APP_PBE.E_REIMBURSEMENTS ermbs
          JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOLS pip on ermbs.PRODUCT_INSTANCE_POOL_ID = pip.ID
          JOIN APP_PBE.ORDERS ord on pip.ORDER_ID = ord.ID
          JOIN APP_PBE.CONTRACTS cnt on ord.CONTRACT_ID = cnt.ID
          JOIN APP_PBE.INDIVIDUALS ind on ind.ID = cnt.INDIVIDUAL_ID
          JOIN APP_PBE.GRANT_PROGRAMS gr_pr ON gr_pr.ID = cnt.GRANT_PROGRAM_ID
          JOIN APP_PBE.INDIVIDUAL_CONTACTS contact ON contact.IND_ID = ind.ID
          LEFT JOIN APP_PBE.E_REIMBURSEMENT_INVOICES invoice ON invoice.E_REIMBURSEMENT_ID = ermbs.ID
        WHERE
          ermbs.ID = #{ermbsId}
          AND contact.CONTACT_TYPE = 'VER_EMAIL'
          AND rownum &lt;= 1
    </select>

    <select id="findReportsByErmbsId" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsMailAttachmentDto" parameterType="list">
        SELECT
          report.TYPE_NAME                name,
          report.TYPE_NAME || '.pdf'      originalFilename,
          report.FILE_LOCATION            fileLocation
        FROM
          APP_PBE.E_REIMBURSEMENTS ermbs
          JOIN APP_PBE.E_REIMBURSEMENT_REPORTS report ON report.E_REIMBURSEMENT_ID = ermbs.ID
        WHERE
          ermbs.ID = #{ermbsId}
    </select>

    <select id="findMailsByErmbsId" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsMailDto" parameterType="list">
        SELECT
          mails.ID                                  id,
          mails.EMAIL_TYPE                          emailType,
          mails.EMAILS_TO                           emailsTo,
          mails.EMAIL_SUBJECT                       emailSubject,
          mails.EMAIL_BODY                          emailBody
        FROM
          APP_PBE.E_REIMBURSEMENTS ermbs
          JOIN APP_PBE.E_REIMBURSEMENT_EMAILS mails ON mails.E_REIMBURSEMENT_ID = ermbs.ID
        WHERE
          ermbs.ID = #{ermbsId}
    </select>

    <resultMap id="unsrvPoolRmbsMap" type="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.UnrsvPoolRmbsDto" autoMapping="true" >
        <id column="ermbsId" property="ermbsId"/>
        <association property="pool" columnPrefix="pll_" autoMapping="true" javaType="pl.sodexo.it.gryf.common.dto.publicbenefits.pbeproductinstancepool.PbeProductInstancePoolDto"/>
        <association property="individual" columnPrefix="ind_" autoMapping="true" javaType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.RmbsIndDto"/>
        <collection property="reports" ofType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsReportDto" autoMapping="true" columnPrefix="rep_"/>
        <collection property="emails" ofType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsMailDto" autoMapping="true" columnPrefix="mail_">
            <id column="id" property="id"/>
            <collection property="attachments" ofType="pl.sodexo.it.gryf.common.dto.publicbenefits.electronicreimbursements.ErmbsMailAttachmentDto" autoMapping="true" columnPrefix="ett_"/>
        </collection>
    </resultMap>
    <select id="findUnrsvPoolRmbsById" resultMap="unsrvPoolRmbsMap">
        SELECT
--        rozliczenie
          ermbs.ID                                  ermbsId,
          ermbs.TYPE_ID                             typeCode,
          ermbs.STATUS_ID                           statusCode,
          ermbs_stat.NAME                           statusName,
          ermbs.REIMBURSEMENT_DATE                  reimbursementDate,
          ermbs.ARRIVAL_DATE                        arrivalDate,
          ermbs.EXPIRED_PRODUCTS_NUM                expiredProductsNum,
          ermbs.SXO_TI_AMOUNT_DUE_TOTAL             sxoTiAmountDueTotal,
          ermbs.SXO_IND_AMOUNT_DUE_TOTAL            sxoIndAmountDueTotal,
          ermbs.IND_TI_AMOUNT_DUE_TOTAL             indTiAmountDueTotal,
          ermbs.TI_REIMB_ACCOUNT_NUMBER             tiReimbAccountNumber,
          ermbs.IND_OWN_CONTRIBUTION_USED           indOwnContributionUsed,
          ermbs.IND_SUBSIDY_VALUE                   indSubsidyValue,
          ermbs.VERSION                             version,
          ermbs.CREATED_USER                        createdUser,
          ermbs.CREATED_TIMESTAMP                   createdTimestamp,
          ermbs.MODIFIED_USER                       modifiedUser,
          ermbs.MODIFIED_TIMESTAMP                  modifiedTimestamp,
--        dane osoby fizycznej
          ind.ID                                    ind_id,
          ind.FIRST_NAME                            ind_firstName,
          ind.LAST_NAME                             ind_lastName,
          ind.PESEL                                 ind_pesel,
--        pula
          pip.ID                                    pll_id,
          pip.ORDER_ID                              pll_orderId,
          ermbs.EXPIRED_PRODUCTS_NUM                pll_availableNum,
          pip.EXPIRY_DATE                           pll_expiryDate,
--        raporty
          report.ID                                 rep_id,
          report.E_REIMBURSEMENT_ID                 rep_ermbsId,
          report.TYPE_NAME                          rep_typeName,
          report.FILE_LOCATION                      rep_fileLocation,
--        maile
          mails.ID                                  mail_id,
          mails.EMAIL_TYPE                          mail_emailType,
          mails.EMAILS_TO                           mail_emailsTo,
          mails.EMAIL_SUBJECT                       mail_emailSubject,
          mails.EMAIL_BODY                          mail_emailBody,
--        załączniki maili
          e_att.ID                                  mail_ett_id,
          e_att.ATTACHMENT_PATH                     mail_ett_fileLocation,
          e_att.ATTACHMENT_NAME                     mail_ett_name,
        e_att.ATTACHMENT_NAME mail_ett_originalFilename,
        ind.CODE ind_code
        FROM
          APP_PBE.E_REIMBURSEMENTS ermbs
          JOIN APP_PBE.E_REIMBURSEMENT_STATUSES ermbs_stat ON ermbs.STATUS_ID = ermbs_stat.ID
          JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOLS pip on ermbs.PRODUCT_INSTANCE_POOL_ID = pip.ID
          JOIN APP_PBE.ORDERS ord on pip.ORDER_ID = ord.ID
          JOIN APP_PBE.CONTRACTS cnt on ord.CONTRACT_ID = cnt.ID
          JOIN APP_PBE.INDIVIDUALS ind on ind.ID = cnt.INDIVIDUAL_ID
          LEFT JOIN APP_PBE.E_REIMBURSEMENT_REPORTS report ON report.E_REIMBURSEMENT_ID = ermbs.ID
          LEFT JOIN APP_PBE.E_REIMBURSEMENT_EMAILS mails ON mails.E_REIMBURSEMENT_ID = ermbs.ID
          LEFT JOIN APP_PBE.EMAIL_INSTANCE_ATTACHMENTS e_att ON e_att.EMAIL_INSTANCE_ID = mails.EMAIL_INSTANCE_ID
        WHERE
          ermbs.ID = #{ermbsId}
          and rownum &lt;= 1
    </select>

    <select id="isErmbsForEnterprise" resultType="java.lang.Boolean">
        SELECT
          CASE
            WHEN CONTRACT_TYPE_ID = 'IND'
              THEN 0
            ELSE
              1
          END
        FROM
          APP_PBE.E_REIMBURSEMENTS ermbs
          JOIN APP_PBE.TI_TRAINING_INSTANCES ti ON ti.ID = ermbs.TI_TR_INST_ID
          JOIN APP_PBE.TI_TRAININGS tr ON tr.ID = ti.TRAINING_ID
          JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOL_USES pipu on ti.ID = pipu.TRAINING_INSTANCE_ID
          JOIN APP_PBE.PBE_PRODUCT_INSTANCE_POOLS pip on pipu.PRODUCT_INSTANCE_POOL_ID = pip.ID
          JOIN APP_PBE.ORDERS ord on pip.ORDER_ID = ord.ID
          JOIN APP_PBE.CONTRACTS cnt on ord.CONTRACT_ID = cnt.ID
        WHERE
          ermbs.ID = #{ermbsId}
    </select>

    <select id="shouldBeCreditNoteCreated" resultType="java.lang.Boolean">
    SELECT
          CASE
            WHEN ermbs.SXO_IND_AMOUNT_DUE_TOTAL &gt; 0
              THEN 1
            ELSE
              0
          END
        FROM
          APP_PBE.E_REIMBURSEMENTS ermbs
        WHERE
          ermbs.ID = #{ermbsId}
    </select>

    <select id="checkIBeingCreatedErmbsIsTerminatedByTrainingInstanceId" resultType="java.lang.Boolean">
        SELECT
            CASE
                WHEN
                  SYSDATE - NVL(e_day_limit_param.VALUE, #{criteria.config.defaultEReimburseDayLimit}) &gt; tr.END_DATE
                    THEN 1
                ELSE
                  0
             END
        FROM
          APP_PBE.TI_TRAINING_INSTANCES tr_in
          JOIN APP_PBE.TI_TRAININGS tr ON tr.ID = tr_in.TRAINING_ID
          LEFT JOIN APP_PBE.GRANT_PROGRAM_PARAMS e_day_limit_param on (
            e_day_limit_param.GRANT_PROGRAM_ID = tr_in.GRANT_PROGRAM_ID
            AND e_day_limit_param.PARAM_ID = 'E_DAY_LIM'
            AND NVL(e_day_limit_param.DATE_FROM, SYSDATE) &lt;= SYSDATE
            AND NVL(e_day_limit_param.DATE_TO, SYSDATE) &gt;= SYSDATE
          )
        WHERE
          tr_in.ID = #{trainingInstanceId}
          <if test="criteria.gryfUser.userType == 'TRAINING_INSTITUTION'">
              AND tr.TRAINING_INSTITUTION_ID = #{criteria.gryfUser.trainingInstitutionId}
          </if>
    </select>

    <select id="isAutomaticErmbs" resultType="java.lang.Boolean">
        SELECT
            CASE
                WHEN
                  auto_param.VALUE = 'Y'
                    THEN 1
                ELSE
                  0
             END
        FROM
          APP_PBE.E_REIMBURSEMENTS ermbs
          JOIN APP_PBE.TI_TRAINING_INSTANCES tr_in ON tr_in.ID = ermbs.TI_TR_INST_ID
          JOIN APP_PBE.TI_TRAININGS tr ON tr.ID = tr_in.TRAINING_ID
          LEFT JOIN APP_PBE.GRANT_PROGRAM_PARAMS auto_param on (
            auto_param.GRANT_PROGRAM_ID = tr_in.GRANT_PROGRAM_ID
            AND auto_param.PARAM_ID = 'AUTO_REIMB'
            AND NVL(auto_param.DATE_FROM, SYSDATE) &lt;= SYSDATE
            AND NVL(auto_param.DATE_TO, SYSDATE) &gt;= SYSDATE
          )
        WHERE
          ermbs.ID = #{ermbsId}
    </select>

    <select id="getReimbursmentStatusName" resultType="java.lang.String">
        SELECT stat.NAME
        FROM APP_PBE.E_REIMBURSEMENTS ermbs
        INNER JOIN APP_PBE.E_REIMBURSEMENT_STATUSES stat ON ermbs.STATUS_ID = stat.ID
        WHERE ermbs.ID = #{ermbsId}
    </select>



</mapper>
