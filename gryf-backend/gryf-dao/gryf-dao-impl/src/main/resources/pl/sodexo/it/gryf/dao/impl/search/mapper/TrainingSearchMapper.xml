<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pl.sodexo.it.gryf.dao.api.search.mapper.TrainingSearchMapper">
    <select id="findTrainings" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.traininginstiutions.searchform.TrainingSearchResultDTO" parameterType="list">
        SELECT * FROM
        (SELECT
            t.ID                        trainingId,
            t.TRAINING_INSTITUTION_ID   institutionId,
            i.NAME                      institutionName,
            t.NAME                      name,
            t.EXTERNAL_ID               externalId,
            t.PRICE                     price,
            t.START_DATE                startDate,
            t.END_DATE                  endDate,
            t.PLACE                     place,
            t.HOURS_NUMBER              hoursNumber,
            t.HOUR_PRICE                hourPrice,
            c.name                      category,
            CASE t.ACTIVE WHEN 'Y' THEN 1 ELSE 0 END as active,
            t.version                   version
        FROM APP_PBE.TI_TRAININGS t
            JOIN APP_PBE.TI_TRAINING_CATEGORIES c on c.ID = t.TRAINING_CATEGORY_ID
            JOIN APP_PBE.TRAINING_INSTITUTIONS i on i.ID = t.TRAINING_INSTITUTION_ID
        <where>
            <if test="searchParams.trainingId != null">
                t.ID = #{searchParams.trainingId}
            </if>
            <if test="searchParams.institutionId != null">
                AND t.TRAINING_INSTITUTION_ID = #{searchParams.institutionId}
            </if>
            <if test="searchParams.institutionName != null and searchParams.institutionName != ''">
                AND LOWER(i.NAME) like '%' || LOWER(#{searchParams.institutionName}) || '%'
            </if>
            <if test="searchParams.name != null and searchParams.name != ''">
                AND LOWER(t.NAME) like '%' || LOWER(#{searchParams.name}) || '%'
            </if>
            <if test="searchParams.externalId != null and searchParams.externalId != ''">
                AND LOWER(t.EXTERNAL_ID) like '%' || LOWER(#{searchParams.externalId}) || '%'
            </if>
            <if test="searchParams.priceFrom != null">
                AND t.PRICE >= #{searchParams.priceFrom}
            </if>
            <if test="searchParams.priceTo != null">
                AND t.PRICE &lt;= #{searchParams.priceTo}
            </if>
            <if test="searchParams.startDateFrom != null">
                AND #{searchParams.startDateFrom} &lt;= t.START_DATE
            </if>
            <if test="searchParams.startDateTo != null">
                AND t.START_DATE &lt;= #{searchParams.startDateTo}
            </if>
            <if test="searchParams.endDateFrom != null">
                AND #{searchParams.endDateFrom} &lt;= t.END_DATE
            </if>
            <if test="searchParams.endDateTo != null">
                AND t.END_DATE &lt;= #{searchParams.endDateTo}
            </if>
            <if test="searchParams.place != null and searchParams.place != ''">
                AND LOWER(t.PLACE) like '%' || LOWER(#{searchParams.place}) || '%'
            </if>
            <if test="searchParams.hoursNumberFrom != null">
                AND t.HOURS_NUMBER >= #{searchParams.hoursNumberFrom}
            </if>
            <if test="searchParams.hoursNumberTo != null">
                AND t.HOURS_NUMBER &lt;= #{searchParams.hoursNumberTo}
            </if>
            <if test="searchParams.hourPriceFrom != null">
                AND t.HOUR_PRICE >= #{searchParams.hourPriceFrom}
            </if>
            <if test="searchParams.hourPriceTo != null">
                AND t.HOUR_PRICE &lt;= #{searchParams.hourPriceTo}
            </if>
            <if test="searchParams.categoryCodes != null and searchParams.categoryCodes.size() > 0">
                <foreach item="code" index="index" collection="searchParams.categoryCodes" open="AND (" separator=" OR " close=")">
                    t.TRAINING_CATEGORY_ID like #{code}
                </foreach>
            </if>
            <if test="searchParams.categoryName != null and searchParams.categoryName != ''">
                AND LOWER(c.NAME) like '%' || LOWER(#{searchParams.categoryName}) || '%'
            </if>
            <if test="searchParams.active != null">
                AND t.ACTIVE = #{searchParams.activeStr}
            </if>
            <if test="criteria.gryfUser.userType == 'TRAINING_INSTITUTION'">
                AND t.TRAINING_INSTITUTION_ID = #{criteria.gryfUser.trainingInstitutionId}
            </if>
        </where>
        <if test="searchParams.sortColumns != null">
            <foreach item="columnName" index="index" collection="searchParams.sortColumns" open="ORDER BY " separator="," close="">
                ${columnName} ${searchParams.sortTypes[index]}
            </foreach>
        </if>)
        <where>
            <if test="searchParams.limit != null">
                ROWNUM &lt;= #{searchParams.limit} + 1
            </if>
        </where>
    </select>

    <select id="findTrainingCategories" resultType="pl.sodexo.it.gryf.common.dto.api.SimpleDictionaryDto" parameterType="list">
        SELECT id, ordinal, name
        FROM APP_PBE.TI_TRAINING_CATEGORIES
    </select>

    <select id="findTraining" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.traininginstiutions.detailsform.TrainingDTO">
        SELECT
        t.ID                                            trainingId,
        t.EXTERNAL_ID                                   externalTrainingId,
        t.TRAINING_INSTITUTION_ID                       trainingInstitution,
        i.NAME                                          institutionName,
        t.NAME                                          name,
        t.PRICE                                         price,
        t.START_DATE                                    startDate,
        t.END_DATE                                      endDate,
        t.PLACE                                         place,
        t.HOURS_NUMBER                                  hoursNumber,
        t.HOUR_PRICE                                    hourPrice,
        t.TRAINING_CATEGORY_ID                          category,
        t.REIMBURSMENT_CONDITIONS                       reimbursmentConditions,
        t.VERSION                                       version,
        t.CREATED_USER                                  createdUser,
        c.CATALOG_ID                                    trainingCategoryCatalogId,
        t.CREATED_TIMESTAMP                             createdTimestamp,
        t.MODIFIED_USER                                 modifiedUser,
        t.MODIFIED_TIMESTAMP                            modifiedTimestamp,
        CASE t.ACTIVE WHEN 'Y' THEN 1 ELSE 0 END        active,
        t.DEACTIVATE_USER                               deactivateUser,
        t.DEACTIVATE_DATE                               deactivateDate,
        t.DEACTIVATE_JOB_ID                             deactivateJobId
        FROM APP_PBE.TI_TRAININGS t
            JOIN APP_PBE.TRAINING_INSTITUTIONS i on i.ID = t.TRAINING_INSTITUTION_ID
            JOIN APP_PBE.TI_TRAINING_CATEGORIES c on c.id = t.TRAINING_CATEGORY_ID
        WHERE t.ID = #{trainingId}
    </select>

    <select id="findTrainingDetails" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.traininginstiutions.searchform.TrainingSearchResultDTO">
        SELECT
        <include refid="trainingDetailsData"/>
        FROM APP_PBE.TI_TRAININGS t
          JOIN APP_PBE.TRAINING_INSTITUTIONS i ON i.ID = t.TRAINING_INSTITUTION_ID
        <where>
            <if test="trainingId != null">
                t.ID = #{trainingId}
            </if>
            <if test="criteria.gryfUser.userType == 'TRAINING_INSTITUTION'">
                AND i.ID = #{criteria.gryfUser.trainingInstitutionId}
            </if>
        </where>
    </select>

    <select id="findTrainingPrecalculatedDetails" resultType="pl.sodexo.it.gryf.common.dto.publicbenefits.traininginstiutions.detailsform.TrainingPrecalculatedDetailsDto">
        SELECT
        <include refid="trainingDetailsData"/>,
        cat.PRODUCT_INSTANCE_FOR_HOUR	  productInstanceForHour,
        cat.MAX_PRODUCT_INSTANCE          maxProductInstance,
        prd.VALUE                         prdValue
        FROM APP_PBE.TI_TRAININGS t
        JOIN APP_PBE.TRAINING_INSTITUTIONS i on i.ID = t.TRAINING_INSTITUTION_ID
        JOIN APP_PBE.TI_TRAINING_CATEGORY_PARAMS cat ON (t.TRAINING_CATEGORY_ID = cat.CATEGORY_ID AND cat.GRANT_PROGRAM_ID = #{grantProgramId})
        JOIN APP_PBE.GRANT_PROGRAMS gr_pr ON gr_pr.ID = #{grantProgramId}
        JOIN APP_PBE.GRANT_OWNERS gr_own ON gr_own.ID = gr_pr.GRANT_OWNER_ID
        JOIN APP_PBE.PBE_PRODUCTS prd ON prd.GRANT_OWNER_ID = gr_own.ID
        JOIN APP_PBE.GRANT_PROGRAM_PRODUCTS gpp ON (gpp.pbe_prd_id = prd.prd_id and gpp.grant_program_id = #{grantProgramId})
        <where>
            <if test="trainingId != null">
                t.ID = #{trainingId}
            </if>
            <if test="criteria.gryfUser.userType == 'TRAINING_INSTITUTION'">
                AND i.ID = #{criteria.gryfUser.trainingInstitutionId}
            </if>
        </where>
    </select>

    <sql id="trainingDetailsData">
        t.ID	                          trainingId,
        t.TRAINING_INSTITUTION_ID	      trainingInstitution,
        i.NAME	                          institutionName,
        t.NAME                            name,
        t.EXTERNAL_ID                     externalId,
        t.PRICE                           price,
        t.START_DATE	                  startDate,
        t.END_DATE	                      endDate,
        t.PLACE                           place,
        t.HOURS_NUMBER	                  hoursNumber,
        t.HOUR_PRICE	                  hourPrice,
        t.TRAINING_CATEGORY_ID	          category,
        t.VERSION                         version,
        t.CREATED_USER	                  createdUser,
        t.CREATED_TIMESTAMP	              createdTimestamp,
        t.MODIFIED_USER	                  modifiedUser,
        t.MODIFIED_TIMESTAMP	          modifiedTimestamp
    </sql>

</mapper>
