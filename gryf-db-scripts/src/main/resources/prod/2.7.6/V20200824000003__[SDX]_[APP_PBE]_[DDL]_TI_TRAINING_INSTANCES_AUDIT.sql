ALTER TABLE APP_PBE.TI_TRAINING_INSTANCES_AUDIT
ADD (IND_ORDER_EXTERNAL_ID VARCHAR2(200 Byte));

ALTER TABLE APP_PBE.TI_TRAINING_INSTANCES_AUDIT
ADD (PRODUCT_INSTANCE_CALC_FOR_HOUR VARCHAR2(10 Byte));

CREATE OR REPLACE TRIGGER APP_PBE.TRG_TI_TRAINING_INSTANCES_AUD
AFTER DELETE OR UPDATE ON APP_PBE.TI_TRAINING_INSTANCES
REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
  v_operation  VARCHAR2(1) := 'U';
  v_user       VARCHAR2(100) := USER;
BEGIN
 IF DELETING THEN v_operation := 'D'; END IF;
 IF USER in ( 'SRV_EE', 'SRV_EE_TI', 'SRV_EE_IND' ) AND NOT DELETING THEN v_user := :NEW.MODIFIED_USER; END IF; -- w przypadku GRYF-a jest pula połączeń na użytkowniku SRV_EE
  INSERT INTO APP_PBE.TI_TRAINING_INSTANCES_AUDIT (
    ID,
    TRAINING_ID,
    INDIVIDUAL_ID,
    GRANT_PROGRAM_ID,
    STATUS_ID,
    ASSIGNED_NUM,
    REGISTER_DATE,
    REIMBURSMENT_PIN,
    OPINION_DONE,
    VERSION,
    CREATED_USER,
    CREATED_TIMESTAMP,
    MODIFIED_USER,
    MODIFIED_TIMESTAMP,
    AUDIT_USER,AUDIT_TIMESTAMP,AUDIT_OPERATION,
    PRODUCT_INSTANCE_CALC_FOR_HOUR,
    IND_ORDER_EXTERNAL_ID)
  VALUES (
    :OLD.ID,
    :OLD.TRAINING_ID,
    :OLD.INDIVIDUAL_ID,
    :OLD.GRANT_PROGRAM_ID,
    :OLD.STATUS_ID,
    :OLD.ASSIGNED_NUM,
    :OLD.REGISTER_DATE,
    :OLD.REIMBURSMENT_PIN,
    :OLD.OPINION_DONE,
    :OLD.VERSION,
    :OLD.CREATED_USER,
    :OLD.CREATED_TIMESTAMP,
    :OLD.MODIFIED_USER,
    :OLD.MODIFIED_TIMESTAMP,
    v_user, SYSTIMESTAMP, v_operation,
    :OLD.PRODUCT_INSTANCE_CALC_FOR_HOUR,
    :OLD.IND_ORDER_EXTERNAL_ID);
EXCEPTION
  WHEN OTHERS THEN
    EAGLE.PK_ERROR.RAISE_ERROR(sqlcode,sqlerrm,'TRG_TI_TRAINING_INSTANCES_AUD');
END TRG_TI_TRAINING_INSTANCES_AUD;
/